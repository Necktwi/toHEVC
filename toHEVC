#!/bin/bash

toHEVCfunc () {
   echo "Converting all ${1} files in $(pwd) to HEVC recursively"
   for file in ./*."${1}"; do
      CopyFlag=false
      if [ "${file}" = "./*.${1}" ] ; then
         echo "empty folder!"
         continue
      fi
      ffmpeg -i "${file}" 2>&1 | grep "Video: hevc"
      if [ $? = 0 ] ; then
         if ! [ ${1} = "mp4" ] ; then
            CopyFlag=true
         else
            echo "${file} is already of HEVC codec"
            continue
         fi
      fi
      if [ "$CopyFlag" = "true" ]; then
         echo "Video already in HEVC. Copying it to MP4 container ..."
         ffmpeg -i "${file}" -c copy -c:s mov_text -f mp4 -tag:v hvc1 \
         -movflags faststart output.mp4
      else
         echo "Converting ${file} ..."
         ffmpeg -i "${file}" -c:v libx265 -crf 21 -c:a aac -c:s mov_text \
         -f mp4 -pix_fmt yuv420p -tag:v hvc1 -movflags faststart output.mp4
      fi
      FFMPEGExitCode=$?
      echo "FFMPEG exit code: $FFMPEGExitCode"
      if [ $FFMPEGExitCode = 255 ] ; then
         return 255
      elif ! [ $FFMPEGExitCode = 0 ] ; then
         rm output.mp4
         continue
      fi
      echo "Cleaning up ..."
      echo "Trashing ${file}"
      trash "${file}"
      FileName="$(basename -s "${1}" "${file}")mp4"
      echo "Renaming output.mp4 to ${FileName}"
      mv output.mp4 "${FileName}"
   done
   for folder in *; do
      if [ -d "${folder}" ]; then
         echo "Opening ${folder} ..."
      else
         echo "Skipping file ${folder}"
         continue;
      fi
      if [ "${folder}" = "." ] || [ "${folder}" = ".." ] || \
      [ "${folder}" = "*" ]
      then
         echo "Skipping current or parent directory"
      continue
      fi
      cd "${folder}" 
      toHEVCfunc $@
      if [ $? = 255 ] ; then
         return 255
      fi
      cd ..
   done
}

toHEVCfunc $@

