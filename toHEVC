#!/bin/bash

# Gowtham Kudupudi 2018/07/06

shopt -s nullglob

toHEVCfunc () {
   echo "Converting all ${1} files in $(pwd) to HEVC recursively"
   if [ ! "${2}" = "" ]; then
      echo "FFMPEG args: ${2}"
   fi
   for file in *.${1}; do
      VCopyFlag=false
      ACopyFlag=false
      if [ "${file}" = "./*.${1}" ] ; then
         echo "empty folder!"
         continue
      fi
      echo "Observing input format..."
      ffmpeg -i "${file}" 2>&1 | grep "Video: hevc" 2>&1 > /dev/null
      if [ $? = 0 ] ; then
         VCopyFlag=true
         ffmpeg -i "${file}" 2>&1 | grep "Audio: aac" 2>&1 > /dev/null
         if [ $? = 0 ] ; then
            ACopyFlag=true
         fi
         if [ ${1} = "mp4" ] ; then
            echo "${file} is already of HEVC codec"
            continue
         fi
      fi
      if [ "$VCopyFlag" = "true" ]; then
         if [ "$ACopyFlag" = "true" ]; then
            echo "Video && Audio already in HEVC && AAC."
            echo "Copying it to MP4 container ..."
            ffmpeg -i "${file}" -c copy -c:s mov_text -f mp4 -tag:v hvc1 \
            -movflags faststart ${2} output.mp4
         else
            echo "Video already in HEVC. Converting audio to AAC ..."
            ffmpeg -i "${file}" -c:v copy -c:a aac -c:s mov_text \
            -f mp4 -tag:v hvc1 -movflags faststart ${2} output.mp4
         fi
      else
         if [ "$ACopyFlag" = "true" ]; then
            echo "Audio already in AAC. Converting video to HEVC ..."
            ffmpeg -i "${file}" -c:v libx265 -crf 21 -c:a copy -c:s mov_text \
            -f mp4 -pix_fmt yuv420p -tag:v hvc1 -movflags faststart ${2}\
            output.mp4
         else
            echo "Converting ${file} ..."
            ffmpeg -i "${file}" -c:v libx265 -crf 21 -c:a aac -c:s mov_text \
            -f mp4 -pix_fmt yuv420p -tag:v hvc1 -movflags faststart ${2}\
            output.mp4
         fi
      fi
      FFMPEGExitCode=$?
      echo "FFMPEG exit code: $FFMPEGExitCode"
      if [ $FFMPEGExitCode = 255 ] ; then
         echo "User signalled to quit."
         return 255
      elif [ $FFMPEGExitCode = 0 ] ; then
         echo "Cleaning up ..."
         echo "Trashing ${file}"
         trash "${file}"
         TrashCode=$?
         FileName="$(basename -s "${1}" "${file}")mp4"
         if [ $TrashCode = 0 ] || ! [ "$FileName" = "$file" ] ; then
            echo "Renaming output.mp4 to ${FileName}"
            mv output.mp4 "${FileName}"
            if ! [ $? = 0 ] ; then
               echo "Renaming failed. Exiting."
               return 254
            fi
         else
            echo "Renaming output.mp4 to HEVC_${FileName}"
            mv output.mp4 "HEVC_${FileName}"
            if ! [ $? = 0 ] ; then
               echo "Renaming failed. Exiting."
               return 254
            fi
         fi
      else
         echo "Something went wrong! Skipping current file conversion ..."
         rm output.mp4
         continue
      fi
   done
   for folder in *; do
      if [ -d "${folder}" ]; then
         echo "Opening ${folder} ..."
      else
         continue;
      fi
      cd "${folder}" 
      toHEVCfunc $@
      ExitCode=$?
      if ! [ $ExitCode = 0 ] ; then
         return $ExitCode
      fi
      cd ..
   done
}

toHEVCfunc "$@"
